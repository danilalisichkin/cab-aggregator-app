openapi: 3.0.1
info:
  title: Promo Code Service API documentation
  description: "API responsible for interaction with promo codes, their stats"
  contact:
    name: Danila Lisichkin
    email: lisichkindanila@gmail.com
  version: 1.0.0
servers:
- url: http://localhost:8083
  description: Generated server url
tags:
- name: Promo Code API Controller
  description: "Provides get, create, update operations above promo codes"
- name: Promo Stat API Controller
  description: "Provides get, create operations above promo code stats"
paths:
  /api/v1/promo-codes/{code}:
    get:
      tags:
      - Promo Code API Controller
      summary: Get
      description: Allows to get existing promo code by its value
      operationId: getPromoCode
      parameters:
      - name: code
        in: path
        description: Value of promo code
        required: true
        schema:
          maxLength: 20
          minLength: 2
          type: string
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "404":
          description: "Not found: promo code does not exist"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
    put:
      tags:
      - Promo Code API Controller
      summary: Update
      description: Allows to update existing promo code
      operationId: updatePromoCode
      parameters:
      - name: code
        in: path
        description: Value of promo code
        required: true
        schema:
          maxLength: 20
          minLength: 2
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoCodeUpdatingDto"
        required: true
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "404":
          description: "Not found: updatable promo code does not exist"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
  /api/v1/promo-stats:
    get:
      tags:
      - Promo Stat API Controller
      summary: Get page
      description: Allows to get page of existing promo code stats
      operationId: getPageOfPromoStats
      parameters:
      - name: offset
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          maximum: 20
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          description: Field for sorting promo code stats
          enum:
          - ID
          - USER_ID
          - PROMO_CODE_ID
          default: id
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - ASC
          - DESC
          default: ASC
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDtoPromoStatDto"
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDtoPromoStatDto"
    post:
      tags:
      - Promo Stat API Controller
      summary: Create
      description: Allows to add/save new promo code stat
      operationId: createPromoStat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoStatAddingDto"
        required: true
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
        "204":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
        "409":
          description: "Conflict: promo code stat with provided data already exists"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
  /api/v1/promo-codes:
    get:
      tags:
      - Promo Code API Controller
      summary: Get page
      description: Allows to get page of existing promo codes
      operationId: getPageOfPromoCodes
      parameters:
      - name: offset
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          maximum: 20
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          description: Field for sorting promo codes
          enum:
          - VALUE
          - DISCOUNT
          - END_DATE
          - LIMIT
          default: value
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - ASC
          - DESC
          default: ASC
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDtoPromoCodeDto"
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageDtoPromoCodeDto"
    post:
      tags:
      - Promo Code API Controller
      summary: Create
      description: Allows to add/save new promo code
      operationId: createPromoCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoCodeAddingDto"
        required: true
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "204":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
        "409":
          description: "Conflict: promo code with provided data already exists"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoCodeDto"
  /api/v1/promo-stats/{id}:
    get:
      tags:
      - Promo Stat API Controller
      summary: Get
      description: Allows to get existing promo code stat by its id
      operationId: getPromoStat
      parameters:
      - name: id
        in: path
        description: Id of promo stat
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: "Bad request: invalid parameters or missing required fields"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
        "404":
          description: "Not found: promo code stat does not exist"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PromoStatDto"
components:
  schemas:
    PromoCodeUpdatingDto:
      required:
      - discountPercentage
      - endDate
      - limit
      type: object
      properties:
        discountPercentage:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        limit:
          maximum: 1000
          minimum: 1
          type: integer
          format: int64
      description: Promo code data that will be changed
    PromoCodeDto:
      type: object
      properties:
        value:
          type: string
        discountPercentage:
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        limit:
          type: integer
          format: int64
      description: Server response with promo code data
    PromoStatAddingDto:
      required:
      - promoCode
      - userId
      type: object
      properties:
        userId:
          type: string
          format: uuid
        promoCode:
          maxLength: 20
          minLength: 2
          type: string
      description: Data that is required to create new promo code stat
    PromoStatDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: string
          format: uuid
        promoCode:
          type: string
      description: Server response with promo code stat data
    PromoCodeAddingDto:
      required:
      - discountPercentage
      - endDate
      - limit
      - value
      type: object
      properties:
        value:
          maxLength: 20
          minLength: 2
          type: string
        discountPercentage:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        limit:
          maximum: 1000
          minimum: 1
          type: integer
          format: int64
      description: Data that is required to create new promo code
    PageDtoPromoStatDto:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/PromoStatDto"
      description: Server response representing a paginated list of items
    PageDtoPromoCodeDto:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/PromoCodeDto"
      description: Server response representing a paginated list of items
