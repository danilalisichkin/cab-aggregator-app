apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Utils\Kompose\bin\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: rating-mongo-database1
  name: rating-mongo-database1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rating-mongo-database1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Utils\Kompose\bin\kompose.exe convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: rating-mongo-database1
    spec:
      containers:
        - args:
            - --replSet
            - rs1
            - --bind_ip
            - 0.0.0.0
            - --port
            - "27017"
          image: mongo:7.0
          livenessProbe:
            exec:
              command:
                - test $(mongosh --port 27017 --eval "try {rs.initiate({_id:'rs1',members:[{_id:0,host:\"rating-mongo-database1:27017\"}, {_id:1,host:\"rating-mongo-database2:27017\"}]})} catch(e) {rs.status().ok}") -eq 1
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
          name: cab-rating-mongo-database1
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: rating-mongo-database1-data
      restartPolicy: Always
      volumes:
        - name: rating-mongo-database1-data
          persistentVolumeClaim:
            claimName: rating-mongo-database1-data
