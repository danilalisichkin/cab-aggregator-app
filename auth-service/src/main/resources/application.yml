spring:
  application:
    name: auth-service
  messages:
    basename:
      encoding: "UTF-8"
      error-causes: "classpath:error_causes"
      validation-errors: "classpath:validation_errors"
      messages: "classpath:messages"
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
app:
  keycloak:
    server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8080}
    realm: ${KEYCLOAK_REALM:cab-aggregator-realm}
    grant-type: ${KEYCLOAK_GRANT_TYPE:client_credentials}
    admin:
      client-id: ${KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}
      client-secret: ${KEYCLOAK_ADMIN_CLIENT_SECRET:DvvioL4dre9nKOIzPrgaZm6VqyJODevD}
    client:
      client-id: ${KEYCLOAK_USER_CLIENT_ID:cab-aggregator-client}
      client-secret: ${KEYCLOAK_USER_CLIENT_SECRET:NsaeQ20BK7DL4hdWxAzx0iCzbUHjw1OL}
  kafka:
    topics:
      passenger:
        name: passenger.creation.v1
        partitions: 1
        replicas: 1
      driver:
        name: driver.creation.v1
        partitions: 1
        replicas: 1
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}
logging:
  logstash:
    server: ${LOGSTASH_HOSTPORT:localhost:5000}
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
server:
  port: ${SERVER_PORT:8081}
  forward-headers-strategy: framework
